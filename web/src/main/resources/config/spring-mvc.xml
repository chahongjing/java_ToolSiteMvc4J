<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- ①：在指定的包下扫描@Component @Controller @Service @Reposity等注解 -->
    <!--<context:component-scan base-package="com.zjy.web.controller,com.zjy.bll,com.zjy.baseframework"/>-->
    <context:component-scan base-package="com.zjy" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <!-- ②：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="${web.view.prefix}" p:suffix="${web.view.suffix}"/>

    <!-- 静态文件映射，将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>
    <!-- 对静态资源文件的访问 -->
    <!-- <mvc:resources mapping="/resources/**" location="/" cache-period="10000" /> -->


    <!-- 这个是SpringMVC必须要配置的，因为它声明了@RequestMapping、@RequestBody、@ResponseBody等。并且，该配置默认加载很多的参数绑定方法，比如json转换解析器等。 -->
    <mvc:annotation-driven>
        <!-- json格式化器 -->
        <mvc:message-converters>
            <!-- <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" /> -->
            <ref bean="jsonConverter"/>
            <ref bean="stringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- json格式化器 -->
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" index="0"></constructor-arg>
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=utf-8</value>
                <value>text/html;charset=utf-8</value>
                <value>application/json;charset=utf-8</value>
                <value>application/xml;charset=utf-8</value>
            </list>
        </property>
    </bean>

    <!-- json格式化器 -->
    <bean id="jsonConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig">
            <bean class="com.zjy.bll.common.FastJsonConfigExt">
                <property name="charset" value="UTF-8" />
                <property name="serializeFilters">
                    <list>
                        <bean class="com.zjy.bll.common.DateFormaterFilter" />
                        <bean class="com.zjy.bll.common.ZonedDateFormaterFilter" />
                    </list>
                </property>
                <property name="serializerFeatures">
                    <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                        <value>DisableCircularReferenceDetect</value>
                    </array>
                </property>
            </bean>
        </property>
    </bean>

    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为1MB -->
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize" value="1048576" />
    </bean>

<!--    <mvc:interceptors>-->
<!--        &lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**" />-->
<!--            &lt;!&ndash; 需排除拦截的地址 &ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:exclude-mapping path="/" />&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:exclude-mapping path="/test" />&ndash;&gt;-->
<!--            &lt;!&ndash; 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 &ndash;&gt;-->
<!--            <bean class="com.zjy.bll.common.ControllerInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
</beans>
